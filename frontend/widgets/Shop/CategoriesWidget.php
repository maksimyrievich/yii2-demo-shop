<?php

namespace frontend\widgets\Shop;

use shop\entities\Shop\Category;
use shop\readModels\Shop\CategoryReadRepository;
//use shop\readModels\Shop\views\CategoryView;
use yii\base\Widget;
use yii\helpers\Html;
use Yii;

class CategoriesWidget extends Widget
{
    /** @var Category|null */
    public $active;
    private $categories;

    public $tpl;
    public $data;
    public $tree;
    public $menuHtml;
    public $category;

    public function __construct(CategoryReadRepository $categories, $config = [])
    {
        parent::__construct($config);
        $this->categories = $categories;
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if($this->tpl === null){
            $this->tpl = '_opencartmenu';
        } else if($this->tpl === 'accordion'){
            $this->tpl = '_accordionmenu';
        }
        $this->tpl .= '.php';
    }

    public function run(): string
    {
        if ($this->tpl == '_opencartmenu.php'){
            return Html::tag('div', implode(PHP_EOL, array_map(function (Category $category) {
               $indent = ($category->depth > 1 ? str_repeat('&nbsp;&nbsp;&nbsp;', $category->depth - 1) . '- ' : '');
               $active = $this->active && ($this->active->id == $category->id || $this->active->isChildOf($category));
               return Html::a(
                   $indent . Html::encode($category->name),
                   ['/shop/catalog/category', 'id' => $category->id],
                   ['class' => $active ? 'list-group-item active' : 'list-group-item']
               );
           }, $this->categories->getTreeWithSubsOf($this->active))), [
               'class' => 'list-group',
           ]);
        }

        if ($this->tpl == '_accordionmenu.php'){
            // get cache
            $menu = Yii::$app->cache->get('menu');
            if($menu) return $menu;
            //asArray() - ворачивает данные в виде массивов, а не ввиде объектов
            //indexBy() - позволяет указать какое поле таблицы использовать для индексации массива
            $this->data = Category::find()->indexBy('id')->asArray()->all();
            $this->tree = $this->getTree();
            $this->menuHtml = $this->getMenuHtml($this->tree);
            //set cache
            Yii::$app->cache->set('menu', $this->menuHtml, 1);
            return Html::tag('div', Html::tag('div', 'Категории товаров' ,
                    ['class' => 'panel-heading']).Html::tag('div', ''.$this->menuHtml.'',
                    ['class' => 'panel-body accordion'] ), ['class' => 'panel panel-success']);
        }
    }

    private function getTree(){
        $tree = [];
        foreach ($this->data as $id => &$node){
            if(!$node['parent_id'])
                $tree[$id] = &$node;
            else
                $this->data[$node['parent_id']]['childs'][$node['id']] = &$node;
        }
        return $tree;
    }

    //Функция, которая из массива представленного в виде дерева, создает и возвращает Html код.
    private function getMenuHtml($tree){
        $str = '';
        foreach ($tree as $cat){
            $str .= $this->catToTemplate($cat);
        }
        return $str;
    }

    //Функция сохраняющая в буфер кусок Html кода
    private function catToTemplate($cat){
        //включаем буферизацию
        ob_start();
        //Включаем в него кусок Html кода
        include __DIR__ . '/template/' . $this->tpl;
        //Возвращаем кусок Html кода, только не на экран а в буферизованном виде.
        return ob_get_clean();
    }
}












































//    public function run(): string
//    {
//        return Html::tag('div', implode(PHP_EOL, array_map(function (CategoryView $view) {
//            $indent = ($view->category->depth > 1 ? str_repeat('&nbsp;&nbsp;&nbsp;', $view->category->depth - 1) . '- ' : '');
//            $active = $this->active && ($this->active->id == $view->category->id || $this->active->isChildOf($view->category));
//            return Html::a(
//                $indent . Html::encode($view->category->name) . ' (' . $view->count . ')',
//                ['/shop/catalog/category', 'id' => $view->category->id],
//                ['class' => $active ? 'list-group-item active' : 'list-group-item']
//            );
//        }, $this->categories->getTreeWithSubsOf($this->active))), [
//            'class' => 'list-group',
//        ]);
//    }
